// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaViamatica;

#nullable disable

namespace PruebaViamatica.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaViamatica.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("varchar (60)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("varchar (10)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("varchar (60)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasColumnType("varchar (50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PruebaViamatica.Models.RolOpcion", b =>
                {
                    b.Property<int>("RolIdRol")
                        .HasColumnType("int");

                    b.Property<int>("RolOpcionesIdOpcion")
                        .HasColumnType("int");

                    b.Property<int>("RolOpcionNavigationRolIdRol")
                        .HasColumnType("int");

                    b.Property<int>("RolOpcionNavigationRolOpcionesIdOpcion")
                        .HasColumnType("int");

                    b.HasKey("RolIdRol", "RolOpcionesIdOpcion");

                    b.HasIndex("RolOpcionNavigationRolIdRol", "RolOpcionNavigationRolOpcionesIdOpcion");

                    b.ToTable("RolesOpciones");
                });

            modelBuilder.Entity("PruebaViamatica.Models.RolUsuario", b =>
                {
                    b.Property<int>("RolIdRol")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("RolIdRol", "UsuariosIdUsuario");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar (120)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar (50)");

                    b.Property<int>("PersonaIdPersona2")
                        .HasColumnType("int");

                    b.Property<string>("SessionActive")
                        .IsRequired()
                        .HasColumnType("varchar (1)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar (20)");

                    b.Property<string>("UseName")
                        .IsRequired()
                        .HasColumnType("varchar (50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasIndex("PersonaIdPersona2");

                    b.HasIndex("UseName")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PruebaViamatica.Models.RolOpcion", b =>
                {
                    b.HasOne("PruebaViamatica.Models.Rol", "Rol")
                        .WithMany("RolesOpciones")
                        .HasForeignKey("RolIdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PruebaViamatica.Models.RolOpcion", "RolOpcionNavigation")
                        .WithMany()
                        .HasForeignKey("RolOpcionNavigationRolIdRol", "RolOpcionNavigationRolOpcionesIdOpcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("RolOpcionNavigation");
                });

            modelBuilder.Entity("PruebaViamatica.Models.RolUsuario", b =>
                {
                    b.HasOne("PruebaViamatica.Models.Rol", "Rol")
                        .WithMany("RolesUsuarios")
                        .HasForeignKey("RolIdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PruebaViamatica.Models.Usuario", "Usuario")
                        .WithMany("RolesUsuarios")
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Session", b =>
                {
                    b.HasOne("PruebaViamatica.Models.Usuario", "Usuario")
                        .WithMany("Sessions")
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Usuario", b =>
                {
                    b.HasOne("PruebaViamatica.Models.Persona", "Persona")
                        .WithMany("Usuarios")
                        .HasForeignKey("PersonaIdPersona2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Persona", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Rol", b =>
                {
                    b.Navigation("RolesOpciones");

                    b.Navigation("RolesUsuarios");
                });

            modelBuilder.Entity("PruebaViamatica.Models.Usuario", b =>
                {
                    b.Navigation("RolesUsuarios");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
